C51 COMPILER V9.00   PWM                                                                   10/05/2018 16:42:23 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE PWM
OBJECT MODULE PLACED IN .\Objects\PWM.obj
COMPILER INVOKED BY: D:\ProgramFiles\Keil_v5\C51\BIN\C51.EXE source\PWM.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(.\includ
                    -e) DEBUG OBJECTEXTEND PRINT(.\Listings\PWM.lst) OBJECT(.\Objects\PWM.obj)

line level    source

   1          #include "app_main.h"
   2          
   3          //宏定义macro definition//
   4          
   5          //类型定义byte definition//
   6          
   7          //变量定义variable definition//
   8          
   9          //标志未定义flags definetion//
  10          
  11          //函数声明Function declaration//
  12          
  13          //函数定义function definetion//
  14          /*******************************************************************
  15          函数原型：
  16          输入参数：
  17          输出参数：
  18          函数功能：开启PWM
  19          *******************************************************************/
  20          void PWM_Open()//开启PWM
  21          {
  22   1              T4PCR2 |= 0x08; //允许输出PWM
  23   1      }
  24          
  25          /*******************************************************************
  26          函数原型：
  27          输入参数：
  28          输出参数：
  29          函数功能：关闭PWM
  30          *******************************************************************/
  31          void PWM_Shutdown()
  32          {
  33   1              T4ADRL = PWM_REVERSE - 0x00;// duty Low   占空比：0%
  34   1              T4ADRH = PWM_REVERSE - 0x00;// duty High
  35   1              T4PCR2 &= ~0x08;                        //禁止输出PWM
  36   1      }
  37          
  38          /*******************************************************************
  39          函数原型：
  40          输入参数：
  41          输出参数：
  42          函数功能：PWM占空比改变,因为是高电平启动(禁止时低电平，要这个低电平)，所以占空比要反着
  43          *******************************************************************/
  44          //void PWM_DutyCycle_Change()
  45          //{
  46          //      //L:2B,H:01 duty:30%
  47          //      //L:C1,H:01 duty:45%
  48          //      //L:57,H:02 dyty:60%
  49          //      T4ADRL = PWM_REVERSE - 0x57;    // duty Low   占空比：
  50          //      T4ADRH = PWM_REVERSE - 0x02;    // duty High
  51          //      MOTOR(1);
  52          //}
  53          
  54          void PWM_DutyCycle_Change()
C51 COMPILER V9.00   PWM                                                                   10/05/2018 16:42:23 PAGE 2   

  55          {
  56   1              if ((AtomizationMode1 == ATOMIZATION_OFF) || (Flas_Anhydrous))
  57   1              {
  58   2                      AtomizationMode1 = ATOMIZATION_OFF;
  59   2                      T4ADRL = PWM_REVERSE - 0x00;// duty Low   占空比：0%
  60   2                      T4ADRH = PWM_REVERSE - 0x00;// duty High
  61   2                      T4PCR2 &= ~0x08;                        //禁止输出PWM
  62   2                      return;
  63   2              }
  64   1              else if (AtomizationMode1 == ATOMIZATION_THREE) //一档是最小档位
  65   1              {
  66   2                      T4ADRL = PWM_REVERSE - 0xFF;// duty Low   占空比：100%
  67   2                      T4ADRH = PWM_REVERSE - 0xFF;// duty High
  68   2              }
  69   1              else if (AtomizationMode1 == ATOMIZATION_TWO)
  70   1              {
  71   2                      T4ADRL = PWM_REVERSE - 0xED;// duty Low   占空比：75%
  72   2                      T4ADRH = PWM_REVERSE - 0x02;// duty High
  73   2              }
  74   1              else if (AtomizationMode1 == ATOMIZATION_ONE)
  75   1              {
  76   2                      T4ADRL = PWM_REVERSE - 0xF3;// duty Low   占空比：50%
  77   2                      T4ADRH = PWM_REVERSE - 0x01;// duty High
  78   2              }
  79   1              MOTOR(AtomizationMode1);//风扇停或者开看Atomization的枚举值
  80   1              
  81   1      }
  82          
  83          
  84          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    126    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
