C51 COMPILER V9.00   VOICE_IC                                                              08/21/2018 17:18:30 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE VOICE_IC
OBJECT MODULE PLACED IN .\Objects\voice_ic.obj
COMPILER INVOKED BY: C:\ProgramFiles2\Keil_v5\C51\BIN\C51.EXE source\voice_ic.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(.\
                    -include) DEBUG OBJECTEXTEND PRINT(.\Listings\voice_ic.lst) OBJECT(.\Objects\voice_ic.obj)

line level    source

   1          //头文件header file//
   2          #include "app_main.h"
   3          
   4          //宏定义macro definition//
   5          
   6          //类型定义byte definition//
   7          SPA_NAME      spa_name; //枚举变量类型
   8          VOICE_STEP    Voice_Step; //语音步骤枚举变量类型
   9          
  10          
  11          //变量定义variable definition//
  12          uint8_t idata voice_send_step; //语音发送步骤
  13          uint8_t idata voice_send_data; //语音发送数据
  14          uint8_t idata voice_50us_cnt; //50us计时
  15          uint8_t idata voice_50us_cnt_set; //50us计时设计
  16          uint8_t idata spa_cmd; //spa命令
  17          uint8_t idata spa_volume; //音量
  18          uint8_t idata cur_spa_name;
  19          uint8_t idata cntSPAOn;
  20          code uint8_t voice_vol_tab[]=
  21          {
  22                  0x00,0x01,0x02,0x03,0x05,0x07,
  23                  0x09,0x0A,0x0C,0x0E,0x0F,
  24          };
  25          
  26          //标志未定义flags definetion//
  27          bit       gbVoice_Work;
  28          bit   flag_voice_send; //语音发送标志
  29          bit   enable_SPApause;//为1为暂停
  30          
  31          /*******************************************************************
  32          函数原型：
  33          输入参数：
  34          输出参数：
  35          函数功能：设置语音音量 
  36          *******************************************************************/
  37          void set_voice_vol(uint8_t vol) //设置语音音量 
  38          {
  39   1              voice_send(SPA_VOL15-voice_vol_tab[vol]);
  40   1      }
  41          
  42          /*******************************************************************
  43          函数原型：
  44          输入参数：
  45          输出参数：
  46          函数功能：语音发送
  47          *******************************************************************/
  48          void voice_send(uint8_t key) //语音发送
  49          {
  50   1              if(!flag_voice_send)
  51   1              {
  52   2                      flag_voice_send = 1;
  53   2                      voice_send_data = key-1;
  54   2                      voice_send_step = 0;
C51 COMPILER V9.00   VOICE_IC                                                              08/21/2018 17:18:30 PAGE 2   

  55   2                      voice_50us_cnt =  0;
  56   2                      VOIC_DATA(0); //端口电平置位//复位宏定义
  57   2                      voice_50us_cnt_set =200;//change1
  58   2              }
  59   1      }
  60          
  61          /*******************************************************************
  62          函数原型：
  63          输入参数：
  64          输出参数：
  65          函数功能：语音发送时间及顺序
  66          *******************************************************************/
  67          void voice_in_timer(void)
  68          {
  69   1              if(flag_voice_send)
  70   1              {
  71   2                      if(++voice_50us_cnt >= voice_50us_cnt_set)
  72   2                      {
  73   3                              voice_50us_cnt = 0;
  74   3                              switch(voice_send_step) //协议
  75   3                              {
  76   4                                      case 0:         
  77   4                                      VOIC_DATA(1); 
  78   4                                              voice_50us_cnt_set = 160;
  79   4                                              break;                                  
  80   4                                      case 1:
  81   4                                              VOIC_DATA(0); 
  82   4                                              voice_50us_cnt_set = 20;                        
  83   4                                              break;
  84   4                                      case 2:
  85   4                                      case 4:
  86   4                                      case 6:
  87   4                                      case 8:
  88   4                                      case 10:
  89   4                                      case 12:
  90   4                                      case 14:
  91   4                                      case 16:
  92   4                                              VOIC_DATA(1);
  93   4                                              if(voice_send_data & 0x80)
  94   4                                                      voice_50us_cnt_set = 30;
  95   4                                              else
  96   4                                                      voice_50us_cnt_set = 10;
  97   4                                              break;
  98   4                                      case 2+1:
  99   4                                      case 4+1:
 100   4                                      case 6+1:
 101   4                                      case 8+1:
 102   4                                      case 10+1:
 103   4                                      case 12+1:
 104   4                                      case 14+1:
 105   4                                      case 16+1:
 106   4                                              VOIC_DATA(0); ; 
 107   4                                              if(voice_send_data & 0x80)
 108   4                                                      voice_50us_cnt_set = 10;
 109   4                                              else
 110   4                                                      voice_50us_cnt_set =30;
 111   4                                              voice_send_data=voice_send_data<<1;
 112   4                                              break;
 113   4                                      case 17+1:
 114   4                                                      voice_50us_cnt_set = 200;
 115   4                                              break;
 116   4                                      default:
C51 COMPILER V9.00   VOICE_IC                                                              08/21/2018 17:18:30 PAGE 3   

 117   4                                              VOIC_DATA(0);
 118   4                                              flag_voice_send = 0;
 119   4                                              break;
 120   4                              }
 121   3                              voice_send_step++;
 122   3                      }       
 123   2              }
 124   1      }
 125          
 126          /*******************************************************************
 127          函数原型：
 128          输入参数：
 129          输出参数：
 130          函数功能：被主函数调用
 131          *******************************************************************/
 132          void DealWith_Voice(void) //被主函数调用
 133          {
 134   1              if(PlayMode == PLAY_MUSIC)
 135   1              {
 136   2                      if(gbVoice_Work==0)
 137   2                      { //类似于初始化，用于刷新数据
 138   3                              cntSPAOn=0;
 139   3                              cur_spa_name=~spa_name;
 140   3                              spa_volume  =~sys_volume; 
 141   3                              Voice_Step=VOICE_STEP_START;
 142   3                      }
 143   2                      gbVoice_Work=1; 
 144   2                      switch(Voice_Step)
 145   2                      {
 146   3                              case VOICE_STEP_START:
 147   3                                      EN_MUTE();
 148   3                                      if(++cntSPAOn>25)
 149   3                                      {
 150   4                                        CLR_AUCH();
 151   4                                              SET_BT_POWER(); //置位PA11，对应蓝牙芯片的vbat脚
 152   4                                              cntSPAOn=0;
 153   4                                              Voice_Step++;
 154   4                                      }
 155   3                                      break;
 156   3                              case VOICE_STEP_INITI1:
 157   3              UART1_init(); 
 158   3                                      SET_VOICE_POWER();
 159   3                                      if(++cntSPAOn>50)
 160   3                                      {
 161   4                                              cntSPAOn=0;
 162   4                                              Voice_Step++;
 163   4                                      }
 164   3                                      break;
 165   3                              case VOICE_STEP_INITI2:
 166   3                                      if(++cntSPAOn>200)
 167   3                                      {
 168   4                                              Voice_Step++;
 169   4                                              cntSPAOn=0;
 170   4                                      }
 171   3                                      break;
 172   3                              case VOICE_STEP_INITI3:
 173   3                                      Voice_Step++;
 174   3                                      break;
 175   3                              default: 
 176   3                                      if(spa_cmd)
 177   3                                      { 
 178   4                                              if(!flag_voice_send) 
C51 COMPILER V9.00   VOICE_IC                                                              08/21/2018 17:18:30 PAGE 4   

 179   4                                              {
 180   5                                                      if(spa_cmd==SPA_PAUSE)
 181   5                                                              Uart0Transmit_SendString(&SPASongs_Num_Table[0][0]);
 182   5                                                      if(spa_cmd==SPA_PALY)
 183   5                                                              Uart0Transmit_SendString(&SPASongs_Num_Table[spa_name][0]);
 184   5                                                      voice_send(spa_cmd);
 185   5                                                      spa_cmd=0;
 186   5                                              }
 187   4                                      } 
 188   3                                      else if(spa_name!=cur_spa_name) 
 189   3                                      {
 190   4                                              if(!flag_voice_send) 
 191   4                                              {
 192   5                                                      cur_spa_name=spa_name;
 193   5                                                      if((spa_name==SPA_NONE)||(spa_name==SPA_PAUSE))
 194   5                                                      {
 195   6                                                              enable_SPApause=1;
 196   6                                                              cur_spa_name=SPA_PAUSE;
 197   6                                                              Uart0Transmit_SendString(&SPASongs_Num_Table[0][0]);
 198   6                                                      }
 199   5                                                else if((spa_name<=SPA_WHITENOISE))
 200   5                                                      {
 201   6                                                              Uart0Transmit_SendString(&SPASongs_Num_Table[spa_name][0]);
 202   6                                                      }
 203   5                                                      voice_send(cur_spa_name);       
 204   5                                                      cur_spa_name=spa_name;
 205   5                                              }
 206   4                                      }
 207   3                                      else if(sys_volume!=spa_volume)
 208   3                                      {
 209   4                                              if(!flag_voice_send)
 210   4                                              {
 211   5                                                      spa_volume=sys_volume;
 212   5                                      set_voice_vol(sys_volume);
 213   5                                              }
 214   4                                      }
 215   3                                      else if((enableMute!=enableMute_bk)&&(!Uart0_SendString_3Step))
 216   3                                      {
 217   4                                              enableMute_bk=enableMute;
 218   4                                              if(enableMute)
 219   4                                              {
 220   5                                                      Uart0Transmit_SendString(&SPASongs_Num_Table[0][0]);
 221   5                                              }
 222   4                                              else
 223   4                                              {
 224   5                                                      Uart0Transmit_SendString(&SPASongs_Num_Table[spa_name][0]);
 225   5                                              }
 226   4                                      }
 227   3                                      else
 228   3                                      {
 229   4                                       if((enable_SPApause) || (enableMute) || (sys_volume==0))
 230   4                                              EN_MUTE();
 231   4                                       else 
 232   4                                              DE_MUTE();
 233   4                                      }
 234   3                                      break;
 235   3                      }
 236   2              }       
 237   1              else
 238   1              {
 239   2                      if(gbVoice_Work!=0)
 240   2                      {
C51 COMPILER V9.00   VOICE_IC                                                              08/21/2018 17:18:30 PAGE 5   

 241   3                              Voice_Step=VOICE_STEP_START; //为下一次发送做准备，所以赋值为start
 242   3                      }
 243   2                      gbVoice_Work=0;
 244   2                      switch(Voice_Step)
 245   2                      {
 246   3                              case VOICE_STEP_START:
 247   3                                      if(!flag_bt_conn)
 248   3                                              EN_MUTE();
 249   3                                      Voice_Step++;
 250   3                                      break;
 251   3                              case VOICE_STEP_INITI1:
 252   3                                      if(++cntSPAOn>20)
 253   3                                      {
 254   4                                              cntSPAOn=0;  
 255   4                                        SET_VOICE_POWER();
 256   4                                              Voice_Step++;
 257   4                                      }
 258   3                                      break;
 259   3                              case VOICE_STEP_INITI2:
 260   3                                      if(!Uart0_SendString_3Step)
 261   3                                      {
 262   4                                              Uart0Transmit_SendString(&SPASongs_Num_Table[0][0]);
 263   4                                              Voice_Step++;
 264   4                                      }
 265   3                                      break;
 266   3                              case VOICE_STEP_INITI3:
 267   3                                      if(!flag_bt_conn)
 268   3                                              Voice_Step++;
 269   3                                      break;
 270   3                              default: 
 271   3                                      break;
 272   3                      }
 273   2              }
 274   1      }
 275          
 276          
 277          
 278          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    654    ----
   CONSTANT SIZE    =     11    ----
   XDATA SIZE       =      2    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =      8    ----
   BIT SIZE         =      3    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
