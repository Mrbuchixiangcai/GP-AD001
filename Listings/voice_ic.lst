C51 COMPILER V9.00   VOICE_IC                                                              10/05/2018 16:42:22 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE VOICE_IC
OBJECT MODULE PLACED IN .\Objects\voice_ic.obj
COMPILER INVOKED BY: D:\ProgramFiles\Keil_v5\C51\BIN\C51.EXE source\voice_ic.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(.\i
                    -nclude) DEBUG OBJECTEXTEND PRINT(.\Listings\voice_ic.lst) OBJECT(.\Objects\voice_ic.obj)

line level    source

   1          //头文件header file//
   2          #include "app_main.h"
   3          
   4          //宏定义macro definition//
   5          
   6          //类型定义byte definition//
   7          SPA_NAME      spa_name; //枚举变量类型
   8          SPA_NAME      spa_name_bk;
   9          VOICE_STEP    Voice_Step; //语音步骤枚举变量类型
  10          
  11          
  12          //变量定义variable definition//
  13          uint8_t  idata voice_send_step; //语音发送步骤
  14          uint8_t  idata voice_send_data; //语音发送数据
  15          uint16_t idata voice_50us_cnt; //50us计时
  16          uint16_t idata voice_50us_cnt_set; //50us计时设计
  17          uint8_t  idata spa_cmd; //spa命令
  18          uint8_t  idata spa_volume; //音量
  19          uint8_t  idata cur_spa_name;
  20          uint8_t  idata cntSPAOn;
  21          uint8_t  idata shi_Temp;
  22          code uint8_t voice_vol_tab[]=
  23          {
  24                  0x00,0x01,0x02,0x03,0x05,0x07,
  25                  0x09,0x0A,0x0C,0x0E,0x0F,
  26          };
  27          
  28          //标志未定义flags definetion//
  29          bit       gbVoice_Work;
  30          bit   flag_voice_send; //语音发送标志
  31          bit   enable_SPApause;//为1为暂停
  32          
  33          /*******************************************************************
  34          函数原型：
  35          输入参数：
  36          输出参数：
  37          函数功能：设置语音音量 
  38          *******************************************************************/
  39          void set_voice_vol(uint8_t vol) //设置语音音量 
  40          {
  41   1              voice_send(SPA_VOL15-voice_vol_tab[vol]);
  42   1      }
  43          
  44          /*******************************************************************
  45          函数原型：
  46          输入参数：
  47          输出参数：
  48          函数功能：语音发送
  49          *******************************************************************/
  50          void voice_send(uint8_t key) //语音发送
  51          {
  52   1              if(!flag_voice_send)
  53   1              {
  54   2                      flag_voice_send = 1;
C51 COMPILER V9.00   VOICE_IC                                                              10/05/2018 16:42:22 PAGE 2   

  55   2                      voice_send_data = key-1;
  56   2                      voice_send_step = 0;
  57   2                      voice_50us_cnt =  0;
  58   2                      VOIC_DATA(0); //端口电平置位//复位宏定义
  59   2                      voice_50us_cnt_set =200;//change1
  60   2              }
  61   1      }
  62          
  63          /*******************************************************************
  64          函数原型：
  65          输入参数：
  66          输出参数：
  67          函数功能：语音发送时间及顺序
  68          *******************************************************************/
  69          void voice_in_timer(void)
  70          {
  71   1              if(flag_voice_send)
  72   1              {
  73   2                      if(++voice_50us_cnt >= voice_50us_cnt_set)
  74   2                      {
  75   3                              voice_50us_cnt = 0;
  76   3                              switch(voice_send_step) //协议
  77   3                              {
  78   4                                      case 0:         
  79   4                                      VOIC_DATA(1); 
  80   4                                              voice_50us_cnt_set = 400-1;
  81   4                                              break;                                  
  82   4                                      case 1:
  83   4                                      case 3:
  84   4                                      case 5:
  85   4                                      case 7:
  86   4                                      case 9:
  87   4                                      case 11:
  88   4                                      case 13:
  89   4                                      case 15:
  90   4                                              VOIC_DATA(0);
  91   4                                              if(voice_send_data & 0x80)
  92   4                                                      voice_50us_cnt_set = 40;//2ms
  93   4                                              else
  94   4                                                      voice_50us_cnt_set = 120;//6ms
  95   4                                              break;
  96   4                                      case 2:
  97   4                                      case 4:
  98   4                                      case 6:
  99   4                                      case 8:
 100   4                                      case 10:
 101   4                                      case 12:
 102   4                                      case 14:
 103   4                                      case 16:
 104   4                                              VOIC_DATA(1); ; 
 105   4                                              if(voice_send_data & 0x80)
 106   4                                                      voice_50us_cnt_set = 120;
 107   4                                              else
 108   4                                                      voice_50us_cnt_set =40;
 109   4                                              voice_send_data=voice_send_data<<1;
 110   4                                              break;
 111   4                                      case 17+1:
 112   4                          VOIC_DATA(0);
 113   4                                              voice_50us_cnt_set = 200;
 114   4                                              break;
 115   4                                      default:
 116   4                                              VOIC_DATA(0);
C51 COMPILER V9.00   VOICE_IC                                                              10/05/2018 16:42:22 PAGE 3   

 117   4                                              flag_voice_send = 0;
 118   4                                              break;
 119   4                              }
 120   3                              voice_send_step++;
 121   3                      }       
 122   2              }
 123   1      }
 124          
 125          /*******************************************************************
 126          函数原型：
 127          输入参数：
 128          输出参数：
 129          函数功能：被主函数调用
 130          *******************************************************************/
 131          void DealWith_Voice(void) //被主函数调用
 132          {
 133   1              if(PlayMode == PLAY_MUSIC)
 134   1              {
 135   2                      if(gbVoice_Work==0)
 136   2                      { //类似于初始化，用于刷新数据
 137   3                              cntSPAOn=0;
 138   3                              cur_spa_name=~spa_name;
 139   3                              spa_volume  =~sys_volume; 
 140   3                              Voice_Step=VOICE_STEP_START;
 141   3                      }
 142   2                      gbVoice_Work=1; 
 143   2                      switch(Voice_Step)
 144   2                      {
 145   3                              case VOICE_STEP_START:
 146   3                                      EN_MUTE();
 147   3                                      if(++cntSPAOn>25)
 148   3                                      {
 149   4                                              CLR_AUCH();
 150   4                                              SET_BT_POWER(); //置位PA11，对应蓝牙芯片的vbat脚
 151   4                                              cntSPAOn=0;
 152   4                                              Voice_Step++;
 153   4                                      }
 154   3                                      break;
 155   3                              case VOICE_STEP_INITI1:
 156   3                                      UART1_init(); 
 157   3                                      SET_VOICE_POWER();
 158   3                                      if(++cntSPAOn>50)
 159   3                                      {
 160   4                                              cntSPAOn=0;
 161   4                                              Voice_Step++;
 162   4                                      }
 163   3                                      break;
 164   3                              case VOICE_STEP_INITI2:
 165   3                                      if(++cntSPAOn>200)
 166   3                                      {
 167   4                                              Voice_Step++;
 168   4                                              cntSPAOn=0;
 169   4                                      }
 170   3                                      break;
 171   3                              case VOICE_STEP_INITI3:
 172   3                                      Voice_Step++;
 173   3                                      break;
 174   3                              default: 
 175   3                                      if(spa_cmd)
 176   3                                      { 
 177   4                                              if(!flag_voice_send) 
 178   4                                              {
C51 COMPILER V9.00   VOICE_IC                                                              10/05/2018 16:42:22 PAGE 4   

 179   5                                                      if(spa_cmd==SPA_PAUSE)
 180   5                                                              Uart0Transmit_SendString(&SPASongs_Num_Table[0][0]);
 181   5                                                      if(spa_cmd==SPA_PALY)
 182   5                                                              Uart0Transmit_SendString(&SPASongs_Num_Table[spa_name][0]);
 183   5                                                      voice_send(spa_cmd);
 184   5                                                      spa_cmd=0;
 185   5                                              }
 186   4                                      } 
 187   3                                      else if(spa_name!=cur_spa_name) 
 188   3                                      {
 189   4                                              if(!flag_voice_send) 
 190   4                                              {
 191   5                                                      cur_spa_name=spa_name;
 192   5                                                      if((spa_name==SPA_OFF)||(spa_name==SPA_PAUSE))
 193   5                                                      {
 194   6                                                              enable_SPApause=1;
 195   6                                                              cur_spa_name=SPA_PAUSE;
 196   6                                                              Uart0Transmit_SendString(&SPASongs_Num_Table[0][0]);
 197   6                                                      }
 198   5                                                else if((spa_name<=SPA_SONG12))
 199   5                                                      {
 200   6                                                              Uart0Transmit_SendString(&SPASongs_Num_Table[spa_name][0]);
 201   6                                                      }
 202   5      //                                              shi_Temp++;
 203   5      //                                              if(shi_Temp>0x0C)
 204   5      //                                                      shi_Temp=0x00;
 205   5                                                      voice_send(cur_spa_name);//voice_send(cur_spa_name);    
 206   5                                                      cur_spa_name=spa_name;
 207   5                                              }
 208   4                                      }
 209   3                                      else if(sys_volume!=spa_volume)
 210   3                                      {
 211   4                                              if(!flag_voice_send)
 212   4                                              {
 213   5                                                      spa_volume=sys_volume;
 214   5      //                              set_voice_vol(sys_volume);
 215   5                                                      bt_volume=sys_volume;
 216   5                                                      bt_send_cmd(BT_VOL); //串口发送音量信息到蓝牙模块端
 217   5                                              }
 218   4                                      }
 219   3                                      else if((enableMute!=enableMute_bk)&&(!Uart0_SendString_3Step))
 220   3                                      {
 221   4                                              enableMute_bk=enableMute;
 222   4                                              if(enableMute)
 223   4                                              {
 224   5                                                      Uart0Transmit_SendString(&SPASongs_Num_Table[0][0]);
 225   5                                              }
 226   4                                              else
 227   4                                              {
 228   5                                                      Uart0Transmit_SendString(&SPASongs_Num_Table[spa_name][0]);
 229   5                                              }
 230   4                                      }
 231   3                                      else
 232   3                                      {
 233   4                                       if((enable_SPApause) || (enableMute) || (sys_volume==0))
 234   4                                              EN_MUTE();
 235   4                                       else 
 236   4                                              DE_MUTE();
 237   4                                      }
 238   3                                      break;
 239   3                      }
 240   2              }       
C51 COMPILER V9.00   VOICE_IC                                                              10/05/2018 16:42:22 PAGE 5   

 241   1              else
 242   1              {
 243   2                      if(gbVoice_Work!=0)
 244   2                      {
 245   3                              Voice_Step=VOICE_STEP_START; //为下一次发送做准备，所以赋值为start
 246   3                      }
 247   2                      gbVoice_Work=0;
 248   2                      switch(Voice_Step)
 249   2                      {
 250   3                              case VOICE_STEP_START:
 251   3                                      if(!flag_bt_conn)
 252   3                                              EN_MUTE();
 253   3                                      Voice_Step++;
 254   3                                      break;
 255   3                              case VOICE_STEP_INITI1:
 256   3                                      if(++cntSPAOn>20)
 257   3                                      {
 258   4                                              cntSPAOn=0;  
 259   4                                        SET_VOICE_POWER();
 260   4                                              Voice_Step++;
 261   4                                      }
 262   3                                      break;
 263   3                              case VOICE_STEP_INITI2:
 264   3                                      if(!Uart0_SendString_3Step)
 265   3                                      {
 266   4                                              Uart0Transmit_SendString(&SPASongs_Num_Table[0][0]);
 267   4                                              Voice_Step++;
 268   4                                      }
 269   3                                      break;
 270   3                              case VOICE_STEP_INITI3:
 271   3                                      if(!flag_bt_conn)
 272   3                                              Voice_Step++;
 273   3                                      break;
 274   3                              default: 
 275   3                                      break;
 276   3                      }
 277   2              }
 278   1      }
 279          
 280          
 281          
 282          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    689    ----
   CONSTANT SIZE    =     11    ----
   XDATA SIZE       =      3    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =     11    ----
   BIT SIZE         =      3    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
