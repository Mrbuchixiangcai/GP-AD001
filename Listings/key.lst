C51 COMPILER V9.00   KEY                                                                   08/24/2018 08:41:03 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE KEY
OBJECT MODULE PLACED IN .\Objects\key.obj
COMPILER INVOKED BY: C:\ProgramFiles2\Keil_v5\C51\BIN\C51.EXE source\key.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(.\inclu
                    -de) DEBUG OBJECTEXTEND PRINT(.\Listings\key.lst) OBJECT(.\Objects\key.obj)

line level    source

   1          //Í·ÎÄ¼þheader file//
   2          #include "app_main.h"
   3          
   4          //ºê¶¨Òåmacro definition//
   5          #define   ADCKEY_NUM  9
   6          
   7          //ÀàÐÍ¶¨Òåbyte definition//
   8          ATOMIZATION_MODE AtomizationMode1;
   9          //±äÁ¿¶¨Òåvariable definition//
  10          uint8_t   gbKeyPress; //°´¼ü°´ÏÂ
  11          uint8_t   gbKeyNone;  //Ã»ÓÐ°´¼ü°´ÏÂ
  12          uint8_t   KeyValue;   //°´¼üÖµ
  13          uint16_t  AdcValue;   //×î³õ²É¼¯µÄADÖµ
  14          uint8_t   KeyEvent;   //°´¼üÊÂ¼þ
  15          uint8_t   cntKeyLoop; //¼ÆÊý°´¼üÑ­»·£¬¶Ì°´£¬³¤°´£¬³¬³¤°´µÄ°´ÏÂÊ±¼ä
  16          uint8_t   cntKeylong;
  17          uint8_t   KeyCurValueBK;//µ±Ç°°´¼üÖµ±¸·Ý
  18          uint8_t   KeyCurValue; //°´¼üµçÑ¹µ±Ç°Öµ  currentµ±Ç°µÄ
  19          uint8_t   KeyLastValue;//°´¼üµçÑ¹ÉÏÒ»´ÎµÄÖµ
  20          code uint16_t ADKEY_TAB1[ADCKEY_NUM]= //°´¼üÕý³£µçÑ¹ÖµÓëÔÊÐíÎó²îÖµ
  21          {
  22                  0x0000     ,//power power¼üÕý³£µçÑ¹Öµ
  23                  0x0519-0x50,//sound sound¼üÕý³£µçÑ¹Öµ
  24                  0x0651-0x50,//v+//ÒÑ¾­Ê§Ð§
  25                  0x08Ae-0x50,//v-
  26                  0x0AE8-0x50,//timer
  27                  0x0C24-0x50,//light
  28                  0x0D9D-0x50,//BT
  29                  0x0E44-0x50,//MIST
  30                  0x0EE5,
  31          };
  32          code uint16_t ADKEY_TAB2[ADCKEY_NUM]= //°´¼üÕý³£µçÑ¹ÖµÓëÔÊÐíÎó²îÖµ
  33          {
  34                  0x0000+0x50,//power
  35                  0x0519+0x50,//sound
  36                  0x0651+0x50,//v+//ÒÑ¾­Ê§Ð§
  37                  0x08AE+0x50,//v-
  38                  0x0AE8+0x50,//timer
  39                  0x0C24+0x50,//light
  40                  0x0D9D+0x50,//BT
  41                  0x0E44+0x50,//MIST
  42                  0x0EE5,
  43          };
  44          
  45          //±êÖ¾Î´¶¨Òåflags definetion//
  46          bit Flas_Anhydrous;
  47          
  48          //º¯Êý¶¨Òåfunction definetion//
  49          /*******************************************************************
  50          º¯ÊýÔ­ÐÍ£º
  51          ÊäÈë²ÎÊý£º
  52          Êä³ö²ÎÊý£º
  53          º¯Êý¹¦ÄÜ£º»ñµÃADÖµ£¬²¢ÅÐ¶ÏÊÇÄÄ¸ö°´¼ü£¬Èç¹ûÊÇµ¥¶ÀµÄ°´¼üºÍADÖµ°´¼ü¸´ºÏÒ²¿ÉÒÔ¼ì²â
  54          *******************************************************************/
C51 COMPILER V9.00   KEY                                                                   08/24/2018 08:41:03 PAGE 2   

  55          uint8_t GetKeyValue(void) 
  56          { 
  57   1              uint8_t  i;
  58   1              uint8_t  KeyNum=0;
  59   1              AdcValue=ADC_read();
  60   1              if(AdcValue<0x0fa0) //²É¼¯µ½µÄÈÎÒâ°´¼üµçÑ¹ÖµÒªÐ¡ÓÚ4000mv(0x0fa0)
  61   1              {
  62   2                      for(i=0;i<ADCKEY_NUM;i++)
  63   2                      {
  64   3                              if((AdcValue>=ADKEY_TAB1[i])&&(AdcValue<=ADKEY_TAB2[i])) //ÅÐ¶Ï²É¼¯µ½µÄ°´¼üµçÑ¹ÖµÎªÄÄÒ»¸ö°´¼ü
  65   3                              {
  66   4                                      KeyNum=i+1; //È·¶¨ÎªÄÇ¸ö°´¼ü£¬ÒòÎªi³õÊ¼Îª0£¬ËùÒÔ¼Ó1£¬
  67   4                                      break;
  68   4                              }
  69   3                      }
  70   2              }
  71   1              ADC_start(5);
  72   1              if ((KeyNum == T_VOLDEC) && (!KeyVolAdd())) //Í¬Ê±°´ÏÂ¡°ÒôÁ¿-¡±ºÍ¡°ÒôÁ¿+¡±10sÖØÖÃÕû¸öÉè±¸
  73   1                      KeyNum = T_DEFAULT;
  74   1              else if ((KeyNum == T_POWER) && (!KeyVolAdd())) //Í¬Ê±°´ÏÂ¡°ÒôÁ¿-¡±ºÍ¡°ÒôÁ¿+¡±10sÖØÖÃÕû¸öÉè±¸
  75   1                      KeyNum = T_CLEAR;
  76   1              else if ((KeyNum == T_MUSIC) && (!KeyVolAdd())) //Í¬Ê±°´ÏÂ¡°ÒôÀÖ¼ü¡±ºÍ¡°ÒôÁ¿+¡±10s½øÈë²âÊÔÄ£Ê½
  77   1                      KeyNum = T_TESTMODE;
  78   1              else if (!KeyVolAdd())
  79   1                      KeyNum = T_VOLINC;
  80   1      
  81   1              if (OLP())//Èç¹ûÎÞË®¾ÍÀ­¸ßÁË,Îª1£¬Õý³£ÓÐË®ÎªµÍ£¬Îª0
  82   1                      Flas_Anhydrous = 1;
  83   1              else
  84   1                      Flas_Anhydrous = 0;
  85   1              return KeyNum; //·µ»Ø°´¼ü
  86   1      }
  87          
  88          /*******************************************************************
  89          º¯ÊýÔ­ÐÍ£º
  90          ÊäÈë²ÎÊý£º
  91          Êä³ö²ÎÊý£º
  92          º¯Êý¹¦ÄÜ£ºÈ¥¶¶£¬³¤¶Ì°´ÅÐ¶Ï
  93          *******************************************************************/
  94          void KeyEventPorc(uint8_t KeyTmp) //±»µ÷ÓÃÊ±½ÓÊÕµÄÊÇGetKeyValue()µÄ·µ»ØÖµ  Ò»°ã¹Ì¶¨£¬²»¸ü¸Ä
  95          {
  96   1              gbKeyPress=0;
  97   1              if(KeyCurValue!=KeyTmp) //Õâ¸öifÓï¾äÊÇÈ¥¶¶£¬»á±»Ö´ÐÐÁ½´Î£¬µÚÈý´Î½øÀ´Ê±Ö±½ÓÌø¹ý
  98   1              {//KeyTmpÎªÁÙÊ±Öµ£¬
  99   2                      if(KeyCurValueBK!=KeyTmp)
 100   2                              KeyCurValueBK=KeyTmp;
 101   2                      else //µÚ¶þ´Î½øÀ´Ê±Ö´ÐÐÕâÒ»Ìõ
 102   2                              KeyCurValue=KeyTmp; //
 103   2                      return;
 104   2              }
 105   1              if(KeyCurValue==KeyLastValue)
 106   1              {
 107   2                      if((KeyLastValue==0) || (cntKeyLoop==0))
 108   2                              return;
 109   2                      if(--cntKeyLoop==0) //Õâ¸öÔÚµÚ¶þ´Î½øKeyEventPorc()º¯Êý£¨µÚÒ»´Î½ø¡°if(KeyCurValue==KeyLastValue)¡±Ö®Ç°£©Ê
             -±±»ÏÂÃæ¸³ÖµÎª5
 110   2                      { //cntKeyLoopÎª5¾ÍÊÇ50msÊ±¼ä
 111   3                              KeyValue=KeyLastValue; //·À¶¶Ö®ºó°ÑÈ·¶¨µÄ°´¼ü¸³Öµ¸øKeyValue
 112   3                              if(gbKeyNone==0)
 113   3                                      gbKeyPress=1;
 114   3                              switch(KeyEvent)
 115   3                              {
C51 COMPILER V9.00   KEY                                                                   08/24/2018 08:41:03 PAGE 3   

 116   4                                      case 0:
 117   4                                              KeyEvent=1;
 118   4                                              KeyValue |= K_D;
 119   4                                              cntKeyLoop=cKEY_HOLD;
 120   4                                              break;
 121   4                                      case 1:
 122   4                                              KeyEvent=2;
 123   4                                              KeyValue |= K_H;
 124   4                                              cntKeyLoop=cKEY_RATE_VOL;
 125   4                                              break;
 126   4                                      case 2:
 127   4                                      case 3:
 128   4                                              KeyEvent=3;
 129   4                                              KeyValue |= K_R;
 130   4                                              cntKeyLoop=cKEY_RATE_VOL;
 131   4                                              if(cntKeylong<250)
 132   4                                                      cntKeylong++;
 133   4                                              break;
 134   4                              }
 135   3                      }
 136   2              }
 137   1              else
 138   1              {
 139   2                      if(KeyLastValue)
 140   2                      {
 141   3                              KeyValue=KeyLastValue;
 142   3                              if(gbKeyNone==0)
 143   3                                      gbKeyPress=1;
 144   3                              switch(KeyEvent)
 145   3                              {
 146   4                                      case 1:KeyValue |= K_U; break;
 147   4                                      case 2:KeyValue |= K_LU;break;
 148   4                                      case 3:KeyValue |= K_LU;break;
 149   4                              }
 150   3                              KeyEvent=0;
 151   3                      }
 152   2                      else
 153   2                      {
 154   3                              gbKeyNone=0;
 155   3                              cntKeylong=0;
 156   3                      }
 157   2                      cntKeyLoop=cKEY_CLICK;
 158   2                      KeyLastValue=KeyCurValue;
 159   2              }
 160   1      }
 161          
 162          /*******************************************************************
 163          º¯ÊýÔ­ÐÍ£º
 164          ÊäÈë²ÎÊý£º
 165          Êä³ö²ÎÊý£º
 166          º¯Êý¹¦ÄÜ£º±»Ö÷º¯Êýµ÷ÓÃ
 167          *******************************************************************/
 168          void KeyScan(void) 
 169          {
 170   1              KeyEventPorc(GetKeyValue());
 171   1      }
 172          
 173          /*******************************************************************
 174          º¯ÊýÔ­ÐÍ£º
 175          ÊäÈë²ÎÊý£º
 176          Êä³ö²ÎÊý£º
 177          º¯Êý¹¦ÄÜ£º°´¼üµÄ´¦Àí£¬°üÀ¨³¤¡¢¶Ì°´¼ü£¬Êý¾Ý´¦Àí¼°¹¦ÄÜÊµÏÖ£¬»¹ÓÐÄÖÖÓÏìÊ±°´ÏÂÈÎÒâ°´¼ü¹Ø±ÕÄÖÖÓ²¢¹Ø»ú
C51 COMPILER V9.00   KEY                                                                   08/24/2018 08:41:03 PAGE 4   

 178          *******************************************************************/
 179          void KeyComMsg(void) 
 180          {
 181   1              if(gbKeyPress)
 182   1              { 
 183   2      //              if(alarm.Runing)//ÄÖÖÓ¹¦ÄÜÔÚ001ºÍ003ÖÐÆÁ±ÎÁË
 184   2      //              {
 185   2      //                      alarm.Runing=0;
 186   2      //                      gbKeyNone=1;//ÐÞ¸´ÄÖÖÓÄ£Ê½Ê±Ä³Ð©°´¼ü¹Ø±ÕÄÖÖÓ²¢¹Ø»úÊ±¹Ø²»ÁËµÄÎÊÌâ£¬Îª1ÈÃµ¯ÆðµÄ°´¼üÎÞÐ§
 187   2      //                      //color_mode=COLOR_OFF;
 188   2      //                      Uart0_SendString_3Step=5;
 189   2      //                      GP389_OFF();
 190   2      //                      //ApplicationGP389_ONOFF((PlayMode==PLAY_OFF)?1:0);     
 191   2      //                      TimerMode=cntTimer=alarm.cntTimer=TIMER_OFF;    
 192   2      //                      return;
 193   2      //              }
 194   2                      //Flag_data_bk=1;//Êý¾Ý¸Ä±äÊ±±¸·Ý
 195   2                      switch(KeyValue)
 196   2                      {
 197   3                              case KU(T_POWER):
 198   3                              { }
 199   3                              case KLU(T_POWER): //value65 Ã¿¸ö°´¼ü7¸öÄ£Ê½ 
 200   3                              {
 201   4                                      if(cntKeylong>=25)
 202   4                                              break;
 203   4                                      Uart0_SendString_3Step=5;
 204   4                                      if(PlayMode!=PLAY_OFF)
 205   4                                      {
 206   5                                              GP389_OFF(); //
 207   5                                      }
 208   4                                      else
 209   4                                              GP389_ON(); //
 210   4                                      //ApplicationGP389_ONOFF((PlayMode==PLAY_OFF)?1:0);
 211   4                                      break;
 212   4                              }
 213   3                              case KR(T_POWER): //value97 Ã¿¸ö°´¼ü7¸öÄ£Ê½£¬
 214   3                              {
 215   4                                      if(PlayMode!=PLAY_OFF)
 216   4                                      {
 217   5                                              if(cntKeylong==25)//³¤°´5s½øÈëwifiÅä¶Ô
 218   5                                              {
 219   6                                                      Uart0_SendString_3Step=5;
 220   6                                                      Uart0Transmit_SendString("$$$ATWQ\r\n"); 
 221   6                                              }
 222   5                                              break;
 223   5                                      }
 224   4                              }
 225   3                              if(PlayMode!=PLAY_OFF)//ÔÚ¿ª»ú×´Ì¬ÏÂ²Å¿ÉÒÔ²Ù×÷ÆäËû°´¼ü
 226   3                              {
 227   4                                      case KU(T_MUSIC): //value66
 228   4                                      {
 229   5                                              if((PlayMode==PLAY_ON) || (PlayMode==PLAY_BT)) //¿ª»ú½øÈë
 230   5                                              {
 231   6                                                      enableMute=0;
 232   6                                                      enable_SPApause=0;
 233   6                                                      PlayMode=PLAY_MUSIC;
 234   6                                                      if(spa_name==SPA_OFF) //spa_nameÎªÃ¶¾Ù±äÁ¿ÀàÐÍ£¬SPA_ZENÎªÃ¶¾Ù±äÁ¿ÔªËØ
 235   6                                                      {
 236   7                                                              spa_name=SPA_BROOK;
 237   7                                                      }
 238   6                                              }
 239   5                                              else if(PlayMode==PLAY_MUSIC) //µÚ¶þ´Î½øÈë
C51 COMPILER V9.00   KEY                                                                   08/24/2018 08:41:03 PAGE 5   

 240   5                                              {
 241   6                                                      enableMute=0;
 242   6                                                      if(enable_SPApause)
 243   6                                                      {
 244   7                                                              enable_SPApause=0;
 245   7                                                              spa_cmd=SPA_PALY;
 246   7                                                              break;
 247   7                                                      }
 248   6                                                      enable_SPApause=0;
 249   6                                                      if(++spa_name>SPA_ZEN)
 250   6                                                      {
 251   7                                                              spa_name= SPA_OFF;
 252   7              //                                              if(color_mode==COLOR_OFF)
 253   7              //                                                      TimerMode=cntTimer=alarm.cntTimer=TIMER_OFF;    
 254   7              //                                          PlayMode=PLAY_ON;
 255   7              //                                              spa_name=SPA_OFF;
 256   7              //                                              enable_SPApause=1;
 257   7                                                      }
 258   6                                              }
 259   5                                              break;
 260   5                                      }
 261   4                                      case KH(T_MUSIC): //value98
 262   4                                      {
 263   5                                              if(PlayMode == PLAY_MUSIC)
 264   5                                              {
 265   6                                                      enable_SPApause=~enable_SPApause;
 266   6                                                      if(!enable_SPApause)
 267   6                                                      {       
 268   7                                                              enableMute=0;
 269   7                                                              spa_cmd=SPA_PALY;       
 270   7                                                      }
 271   6                                                      else
 272   6                                                      {       
 273   7                                                              spa_cmd=SPA_PAUSE;
 274   7                                                      }
 275   6                                              }
 276   5                                              break;
 277   5                                      }
 278   4                                      case KU(T_VOLINC): //value67 Ã»ÓÐbreakËùÒÔ¼ÌÐøÖ´ÐÐÏÂÒ»ÌõÓï¾ä
 279   4                                      case KR(T_VOLINC): //value131
 280   4                                      {
 281   5                                              if(PlayMode>PLAY_ON) 
 282   5                                              {
 283   6                                                      if(sys_volume<10)
 284   6                                                              sys_volume++;
 285   6                                                      enableMute=0;//
 286   6                                              }
 287   5                                              break;
 288   5                                      }
 289   4                                      case KU(T_VOLDEC): //value68
 290   4                                      case KR(T_VOLDEC): //value132
 291   4                                      {
 292   5                                              if(PlayMode>PLAY_ON) 
 293   5                                              {
 294   6                                                      if(sys_volume >1) //
 295   6                                                              sys_volume--;
 296   6                                                      enableMute=0;//
 297   6                                              }
 298   5                                        break;
 299   5                                      } 
 300   4                                      case KU(T_TIMER): //value37 µ¯ÆðÖ´ÐÐ
 301   4                                      {
C51 COMPILER V9.00   KEY                                                                   08/24/2018 08:41:03 PAGE 6   

 302   5                                              if((PlayMode>PLAY_ON)||(color_mode!=COLOR_OFF)) 
 303   5                                              {
 304   6                                                      if(TimerMode==TIMER_OFF) 
 305   6                                                              TimerMode=cntTimer=TIMER_30MIN;
 306   6                                                      else if(TimerMode==TIMER_30MIN)
 307   6                                                              TimerMode=cntTimer=TIMER_60MIN; 
 308   6                                                      else if(TimerMode==TIMER_60MIN)
 309   6                                                              TimerMode=cntTimer=TIMER_90MIN;
 310   6                                                      else 
 311   6                                                              TimerMode=cntTimer=TIMER_OFF;
 312   6                                              }
 313   5                                              break;
 314   5                                      }
 315   4                                      case KU(T_LIGHT): //value70
 316   4                                      {
 317   5                                              if(color_mode==COLOR_USER) 
 318   5                                                      color_mode=COLOR_WHITE; //ÊµÏÖÑ­»·
 319   5                                              else if(Light_Brightness==0)
 320   5                                                      Light_Brightness=1;
 321   5                                              else if(++color_mode>COLOR_CHANGE)
 322   5                                                      color_mode=COLOR_WHITE;
 323   5                                              if(color_mode==COLOR_CHANGE)
 324   5                                              {
 325   6                                                      play_rgb_index=0;
 326   6                                                      curR_val=0;
 327   6                                                      curG_val=0;
 328   6                                                      curB_val=0;
 329   6                                              }
 330   5                                              break;
 331   5                                      }
 332   4                                      case KH(T_LIGHT):
 333   4                                      {
 334   5                                              if(color_mode!=COLOR_OFF)
 335   5                                                      if(++Light_Brightness>3) 
 336   5                                                              Light_Brightness=0;
 337   5                                              break;
 338   5                                      }
 339   4                                      case KU(T_BT): 
 340   4                                      {
 341   5                                              if(PlayMode!=PLAY_BT)
 342   5                                                      PlayMode=PLAY_BT;
 343   5                                              break;
 344   5                                      }
 345   4                                      case KH(T_BT):
 346   4                                      {
 347   5                                              if(PlayMode==PLAY_BT)
 348   5                                                      bt_cmd=BT_PARIR; 
 349   5                                              break;
 350   5                                      }
 351   4                                      case KU (T_MIST):
 352   4                                      case KLU(T_MIST):
 353   4                                      {
 354   5                                              if (AtomizationMode1 == ATOMIZATION_OFF)
 355   5                                                      AtomizationMode1 = ATOMIZATION_THREE;
 356   5                                              else if (AtomizationMode1 == ATOMIZATION_THREE)
 357   5                                                      AtomizationMode1 = ATOMIZATION_TWO;
 358   5                                              else if (AtomizationMode1 == ATOMIZATION_TWO)
 359   5                                                      AtomizationMode1 = ATOMIZATION_ONE;
 360   5                                              else if (AtomizationMode1 == ATOMIZATION_ONE)
 361   5                                                      AtomizationMode1 = ATOMIZATION_OFF;
 362   5                                              break;
 363   5                                      }
C51 COMPILER V9.00   KEY                                                                   08/24/2018 08:41:03 PAGE 7   

 364   4                                      case KR(T_DEFAULT): //×éºÏ¼ü£¬³¤°´10s¡°ÒôÁ¿¼ÓºÍÒôÁ¿¼õ¡±Á½¸ö¼ü»Ö¸´³ö³§ÉèÖÃ
 365   4                                      {
 366   5                                              if(cntKeylong==50)
 367   5                                              {                                        
 368   6                                                      cntFlash=0;
 369   6                                                      Led_Flash=0;
 370   6                                                      setFactory=1;//ÖÃÒ»ÈÃÈý¸ötimerµÆ³£ÁÁÈýÃë
 371   6                                                      PlayMode=PLAY_ON;
 372   6                                                      
 373   6                                                      Uart0_SendString_3Step=5;
 374   6                                                      Uart0Transmit_SendString("$$$Factory setting\r\n");
 375   6                                                      bt_send_cmd(BT_CLEAR_LIST);//Çå³ýÀ¶ÑÀÁÐ±íÁÐ±í
 376   6                                              }
 377   5                                              break;
 378   5                                      }
 379   4                                      case KR(T_CLEAR):  //×éºÏ¼ü£¬³¤°´10s¡°powerºÍÒôÁ¿¼Ó¡±Á½¸ö¼üÇå³ýwifiÁÐ±í
 380   4                                      {
 381   5                                              if(cntKeylong==50)
 382   5                                              {                                        
 383   6                                                      setReset=1;     //ÖÃÒ»ÈÃÈý¸ötimerµÆÉÁË¸ÈýÃë
 384   6                                                      cntFlash=0;
 385   6                                                      Led_Flash=0;
 386   6                                                      Uart0_SendString_3Step=5;
 387   6                                                      Uart0Transmit_SendString("$$$Wifi reset\r\n");
 388   6                                              }
 389   5                                              break;
 390   5                                      }
 391   4                                      case KR(T_TESTMODE):  //×éºÏ¼ü£¬³¤°´10s¡°SOUND¡±ºÍ¡°ÒôÁ¿¼Ó¡±Á½¸ö¼ü½øÈë²âÊÔÄ£Ê½
 392   4                                      {
 393   5                                              if(cntKeylong==25)
 394   5                                              {//³¤°´10½øÈë²âÊÔÄ£Ê½£¬È»ºóÍ¨¹ýwifiÄ£¿é·¢ËÍÃüÁî
 395   6                                                      Flag_TestMode=1;
 396   6                                                      cntFlash=0;
 397   6                                                      Led_Flash=0;
 398   6                                                      Uart0_SendString_3Step=3;
 399   6                                                      Uart0Transmit_SendString(Key_MCU_VER);
 400   6                                              }
 401   5                                              break;
 402   5                                      }
 403   4                                      default:
 404   4                                              break;
 405   4                              }
 406   3                      }
 407   2              }
 408   1      }
 409          
 410          
 411          
 412          
 413          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1074    ----
   CONSTANT SIZE    =    108    ----
   XDATA SIZE       =     12       1
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
